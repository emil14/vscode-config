// Place your key bindings in this file to overwrite the defaults
[
    // Custom tabs function
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    // Integrated Terminal
    {
        "key": "ctrl+shift+q",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+shift+x",
        "command": "workbench.action.terminal.kill"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.terminal.focusNext"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.focusPrevious"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected"
    },
    {
        "key": "ctrl+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+a",
        "command": "workbench.action.terminal.selectAll",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    // Atom-like selection indenting
    {
        "key": "shift+tab",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && editorHasSelection && !editorReadonly"
    },
    {
        "key": "tab",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && editorHasSelection && !editorReadonly"
    },
    // Join Lines
    {
        "key": "ctrl+j",
        "command": "editor.action.joinLines",
    },
    // Go To Implementation
    {
        "key": "f12",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    // Jumpy Extension
    {
        "key": "shift+enter",
        "command": "extension.jumpy-word",
        "when": "editorTextFocus"
    },
    {
        "key": "Escape",
        "command": "extension.jumpy-exit",
        "when": "editorTextFocus && jumpy.isJumpyMode"
    },
]
